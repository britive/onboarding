# ServiceAccount for the Britive Broker
apiVersion: v1
kind: ServiceAccount
metadata:
  name: britive-broker-sa
  namespace: default
---
# ClusterRole with RBAC permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: britive-broker-role
rules:
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["serviceaccounts", "namespaces"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: britive-broker-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: britive-broker-role
subjects:
  - kind: ServiceAccount
    name: britive-broker-sa
    namespace: default
---
# ConfigMap for configuration files
apiVersion: v1
kind: ConfigMap
metadata:
  name: britive-config
  namespace: default
data:
  broker-config.yml: |
    config:
      bootstrap:
        tenant_subdomain: demo
        authentication_token: ${BRITIVE_TOKEN}

  token-generator.sh: |
    #!/bin/bash
    echo $BRITIVE_TOKEN

  start-broker.sh: |
    #!/bin/bash
    sleep "$1"

    _term() {
      echo "Caught SIGTERM signal!"
      kill -TERM "$child" 2>/dev/null
    }

    trap _term SIGTERM
    trap _term SIGINT

    /usr/bin/python3 /root/create-resources.py
    cd /root/broker && /usr/bin/java -Djavax.net.debug=all -jar britive-broker-1.0.0.jar &

    child=$!
    wait "$child"
---
# Secret for Britive token
apiVersion: v1
kind: Secret
metadata:
  name: britive-secrets
  namespace: default
type: Opaque
data:
  # Replace with your base64 encoded Britive token: echo -n "your-token" | base64
  britive-token: ""
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: britive-broker
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: britive-broker
  template:
    metadata:
      labels:
        app: britive-broker
    spec:
      serviceAccountName: britive-broker-sa
      containers:
        - name: britive-broker
          # Update this with your actual image
          image: your-registry/britive-broker:latest
          imagePullPolicy: Always
          command: ["/root/start-broker.sh"]
          args: ["30"] # sleep 30 seconds before starting
          ports:
            - containerPort: 8080
            - containerPort: 22
          env:
            - name: BRITIVE_TOKEN
              valueFrom:
                secretKeyRef:
                  name: britive-secrets
                  key: britive-token
          volumeMounts:
            - name: config
              mountPath: /root/broker/config/broker-config.yml
              subPath: broker-config.yml
            - name: config
              mountPath: /root/broker/bootstrap/token-generator.sh
              subPath: token-generator.sh
            - name: config
              mountPath: /root/start-broker.sh
              subPath: start-broker.sh
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          livenessProbe:
            exec:
              command:
                - pgrep
                - java
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 45
            periodSeconds: 10
      volumes:
        - name: config
          configMap:
            name: britive-config
            defaultMode: 0755
      restartPolicy: Always
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: britive-broker-service
  namespace: default
spec:
  selector:
    app: britive-broker
  ports:
    - name: http
      port: 8080
      targetPort: 8080
    - name: ssh
      port: 22
      targetPort: 22
  type: ClusterIP
